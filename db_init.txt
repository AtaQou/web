-- Δημιουργία της βάσης δεδομένων
CREATE DATABASE IF NOT EXISTS web;

-- Χρήση της βάσης δεδομένων
USE web;

CREATE TABLE vehicles (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(255) NOT NULL,
    cargo VARCHAR(255),
    status ENUM('available', 'busy', 'unavailable') DEFAULT 'available',
    latitude DECIMAL(10, 8),  -- Γεωγραφικό πλάτος για τον marker στο χάρτη
    longitude DECIMAL(11, 8)  -- Γεωγραφικό μήκος για τον marker στο χάρτη
);

CREATE TABLE requests (
    id INT AUTO_INCREMENT PRIMARY KEY,
    citizen_name VARCHAR(255) NOT NULL,
    citizen_phone VARCHAR(20) NOT NULL,
    request_date DATETIME NOT NULL,
    item VARCHAR(255) NOT NULL,
    quantity INT NOT NULL,
    status ENUM('pending', 'active', 'completed') DEFAULT 'pending',
    vehicle_id INT,  -- Ξένη κλείδα προς τον πίνακα vehicles
    assignment_date DATETIME,
    latitude DECIMAL(10, 8),  -- Γεωγραφικό πλάτος για τον marker στο χάρτη
    longitude DECIMAL(11, 8),  -- Γεωγραφικό μήκος για τον marker στο χάρτη
    CONSTRAINT fk_request_vehicle FOREIGN KEY (vehicle_id) REFERENCES vehicles(id) ON DELETE SET NULL
);


CREATE TABLE offers (
    id INT AUTO_INCREMENT PRIMARY KEY,
    citizen_name VARCHAR(255) NOT NULL,
    citizen_phone VARCHAR(20) NOT NULL,
    offer_date DATETIME NOT NULL,
    item VARCHAR(255) NOT NULL,
    quantity INT NOT NULL,
    status ENUM('pending', 'active', 'completed') DEFAULT 'pending',
    vehicle_id INT,  -- Ξένη κλείδα προς τον πίνακα vehicles
    assignment_date DATETIME,
    latitude DECIMAL(10, 8),  -- Γεωγραφικό πλάτος για τον marker στο χάρτη
    longitude DECIMAL(11, 8),  -- Γεωγραφικό μήκος για τον marker στο χάρτη
    CONSTRAINT fk_offer_vehicle FOREIGN KEY (vehicle_id) REFERENCES vehicles(id) ON DELETE SET NULL
);


-- Δημιουργία του πίνακα για τους χρήστες
CREATE TABLE IF NOT EXISTS users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50) NOT NULL UNIQUE,
    password_hash VARCHAR(255) NOT NULL,
    role ENUM('administrator', 'rescuer', 'citizen') NOT NULL,
    name VARCHAR(100) NOT NULL,
    phone VARCHAR(15) NOT NULL,
    location POINT,  -- Αποθήκευση γεωγραφικής θέσης
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS categories (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL UNIQUE,
    description TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS inventory (
    id INT AUTO_INCREMENT PRIMARY KEY,
    category_id INT,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    quantity INT NOT NULL DEFAULT 0,
    location POINT,  -- Location of the warehouse or vehicle
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (category_id) REFERENCES categories(id) ON DELETE CASCADE
);

-- Creating a table for base location
CREATE TABLE base_location (
    id INT AUTO_INCREMENT PRIMARY KEY,
    latitude DOUBLE,
    longitude DOUBLE
);

CREATE TABLE IF NOT EXISTS announcements (
    id INT AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description TEXT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS announcement_items (
    announcement_id INT,
    item_id INT,
    PRIMARY KEY (announcement_id, item_id),
    FOREIGN KEY (announcement_id) REFERENCES announcements(id) ON DELETE CASCADE,
    FOREIGN KEY (item_id) REFERENCES inventory(id) ON DELETE CASCADE
);

